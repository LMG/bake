Project {

  Description "bla"

  Responsible {
    Person "TBD", email: "TBD@TBD.com"
  }

  ExecutableConfig testMultiFile {
    Files "**/*.cpp"
    Dependency lib1, config: testMultiFile
    DefaultToolchain GCC
  }

  ExecutableConfig test {
    Files "**/main.cpp"
    IncludeDir "include"
    IncludeDir "lib1/include"
    Dependency lib1, config: testsub
    PreSteps {
      CommandLine "echo PREMAIN"
      Makefile "makefile/makefile", lib: "makefile/dummy.a"
      CommandLine "echo PRELIB1"
      CommandLine "echo MainConfigName_main $(MainConfigName)", default: off, filter: var
      CommandLine "echo MainProjectName_main $(MainProjectName)", default: off, filter: var
      CommandLine "echo ConfigName_main $(ConfigName)", default: off, filter: var
      CommandLine "echo ProjectName_main $(ProjectName)", default: off, filter: var
      CommandLine "echo OutputDir_main $(OutputDir)", default: off, filter: var
      CommandLine "echo ArtifactName_main $(ArtifactName)", default: off, filter: var
      CommandLine "echo ArtifactNameBase_main $(ArtifactNameBase)", default: off, filter: var
      CommandLine "echo Time_main $(Time)", default: off, filter: var
      CommandLine "echo Hostname_main $(Hostname)", default: off, filter: var
      CommandLine "echo Path_main $(Path)$(HOME)", default: off, filter: var
    }
    Set var1, value: V0main
    Set var2, value: V2main
    Set var1, value: V1main
    PostSteps {
      CommandLine "echo POSTMAIN"
      CommandLine "echo MAIN$(var1)"
      CommandLine "echo MAIN$(var2)"
    }
    DefaultToolchain GCC
  }


  ExecutableConfig test2 {
    PreSteps {
      CommandLine "echo ArtifactName_main $(ArtifactName)", default: off, filter: var
      CommandLine "echo ArtifactNameBase_main $(ArtifactNameBase)", default: off, filter: var
      CommandLine "echo SLASH$(/)SLASH", default: off, filter: var
    }
    ArtifactName "abc.def"
    DefaultToolchain GCC
  }

  ExecutableConfig testPathes {
    IncludeDir "A$(CPPPath)"
    IncludeDir "B$(CPath)"
    IncludeDir "C$(ASMPath)"
    IncludeDir "D$(ArchiverPath)"
    IncludeDir "E$(LinkerPath)"
    Files "src/multi.cpp"
    Toolchain {
      Compiler C, command: "ruby"
    }
    DefaultToolchain GCC {
      Compiler ASM, command: "ruby"
    }
  }

  ExecutableConfig testMapEmpty {
    MapFile
    Files "src/multi.cpp"
    DefaultToolchain GCC
  }

  ExecutableConfig testMapDada {
    MapFile "$(OutputDir)/dada.map"
    Files "src/multi.cpp"
    DefaultToolchain GCC
  }


}
