Project {

CustomConfig cmdBroken {
  Set VAR1, cmd: "GUGU"
  CommandLine "echo *$(VAR1)*"
  DefaultToolchain GCC
}


ExecutableConfig value {
  Set VAR1, value: "GUGU"
  PreSteps {
    CommandLine "echo *$(VAR1)*"
  }
  DefaultToolchain GCC {
    Linker command: "echo"
  }
}

ExecutableConfig cmd {
  Set VAR1, cmd: "echo GAGA"
  PreSteps {
    CommandLine "echo *$(VAR1)*"
  }
  DefaultToolchain GCC {
    Linker command: "echo"
  }
}

ExecutableConfig cat {
  Set VAR1, cmd: "cat ctest.txt"
  PreSteps {
    CommandLine "echo *$(VAR1)*"
  }
  DefaultToolchain GCC {
    Linker command: "echo"
  }
}

ExecutableConfig arti {
  Set VAR1, cmd: "echo GAGA"
  ArtifactName "*$(VAR1)*"
  DefaultToolchain GCC {
    Linker command: "echo"
  }
}

ExecutableConfig triple {
  Set VAR1, cmd: "echo GAGA"
  Set VAR2, value: "GUGU"
  Set VAR3, value: "HUHU"
  PreSteps {
    CommandLine "echo *$(VAR1)$(VAR2)$(VAR3)*"
  }
  DefaultToolchain GCC {
    Linker command: "echo"
  }
}

CustomConfig setEnv {
  Set TESTVAR, value: "IT_W", env: true
  CommandLine "ruby env.rb"
  DefaultToolchain GCC
}



ExecutableConfig recursive {
  Set VAR1, value: "GUGU"
  Set VAR2, cmd: "echo *$(VAR1)*"
  Set VAR3, value: "HUHU $(VAR2)"
  Set VAR4, value: "$(ArtifactName)"
  PreSteps {
    CommandLine "echo *$(VAR2)-$(VAR4)*"
  }
  ArtifactName "$(VAR3).elf"
  DefaultToolchain GCC {
    Linker command: "echo"
  }
}

ExecutableConfig testFlagSub {
  Files "src/main.cpp"
  PreSteps {
    CommandLine "echo SUB$(VAR1)"
    CommandLine "echo SUB$(ConfigName)"
  }
  Toolchain {
    Compiler CPP {
      Flags "-O3"
      Flags add: "$(VAR2)"
      Flags remove: "-$(MainProjectName)"
      Flags remove: "$(VAR1)"
      Flags add: "$(VAR2)"
      Define "$(ConfigName)"
    }
  }
}

LibraryConfig testFlag {
  Dependency config: testFlagSub
  Files "src/main.cpp"
  Set VAR1, value: "-O3"
  Set VAR2, value: "-O2"
  PreSteps {
    CommandLine "echo MAIN$(VAR1)"
    CommandLine "echo MAIN$(ConfigName)"
  }
  Toolchain {
    Compiler CPP {
      Flags remove: "*$(MainProjectName)"
      Define "GAGA"
      Define "GAGA"
    }
  }
  DefaultToolchain GCC {
    Compiler CPP {
      Flags add: "-$(MainProjectName)"
      Define "X$(ConfigName)X"
      Define "X=\"$(Time)\""
    }
  }
}


}
