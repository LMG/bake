#!/usr/bin/env ruby

$timeStart = Time.now

$:.unshift(File.dirname(__FILE__)+"/../lib")
require 'common/version'

STDOUT.sync = true
STDERR.sync = true

puts "-- bake #{Bake::Version.number}, ruby #{RUBY_VERSION}p#{RUBY_PATCHLEVEL}, platform #{RUBY_PLATFORM} --"

require 'tocxx'
require 'common/options/option'
require 'socket'

module Bake

  earlyExit = nil
  Bake.options = Options.new(ARGV)
  begin
    Bake.options.parse_options

    tocxx = Bake::ToCxx.new
    tocxx.connect()
    tocxx.doit()
    tocxx.disconnect()
    
  rescue SystemExit => e
    earlyExit = e
    begin
      tocxx.disconnect()
    rescue Exception => e2
    end
  end

  timeEnd = Time.now
  timeDiff = timeEnd - $timeStart
  Bake.formatter.printInfo "\nTime: %02d:%02d minutes" % [timeDiff/60, timeDiff%60]
  
  raise earlyExit if earlyExit
end
